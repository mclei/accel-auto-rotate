#!/bin/bash

# Auto rotate device screen based on accelerometer state = device orientation
# Uses monitor-sensor from iio-sensor-proxy package

# Detect all touchs device (touchscreen and touchpen are separate devices and all of them must be rotated)

declare -A SCREENORIENT
SCREENORIENT[normal]=normal
SCREENORIENT[bottom-up]=inverted
SCREENORIENT[right-up]=right
SCREENORIENT[left-up]=left

declare -A TOUCHMATRIX
TOUCHMATRIX[normal]="1 0 0 0 1 0 0 0 1"
TOUCHMATRIX[bottom-up]="-1 0 1 0 -1 1 0 0 1"
TOUCHMATRIX[right-up]="0 1 0 -1 0 1 0 0 1"
TOUCHMATRIX[left-up]="0 -1 1 1 0 0 0 0 1"

# Detect touch devices
declare -a TOUCHDEV
while read LINETYPE VALUE
do
  if [ "$LINETYPE" = "P:" ]
  then # new device - reset name
    NAME=
  elif [ "$LINETYPE" = "E:" ]
  then
    if [ "${VALUE%%=*}" = "NAME" ]
    then
      NAME="${VALUE#*=}"
    elif [ "$VALUE" = "ID_INPUT_TOUCHSCREEN=1" ]
    then
      if [ -n "$NAME" ]
      then
        TOUCHDEV+=("pointer:${NAME//\"/}")
      fi
    fi
  fi
done < <(udevadm info --export-db)

echo "Touch devices found: ${TOUCHDEV[@]}"


# Monitor accelerometer changes and rotates screen and touch devices
MATCH=".*Accelerometer orientation changed: (.*)"

while read LINE
do

  if [[ "$LINE" =~ $MATCH ]]
  then
    echo Matched: ${BASH_REMATCH[1]}

    if [ -n "$SCREENORIENT[${BASH_REMATCH[1]}]" ]
    then
      xrandr --orientation ${SCREENORIENT[${BASH_REMATCH[1]}]}
      for DEV in "${TOUCHDEV[@]}"
      do
        xinput set-prop "$DEV" 'Coordinate Transformation Matrix' ${TOUCHMATRIX[${BASH_REMATCH[1]}]}
      done
    fi
  fi

done < <(monitor-sensor)
